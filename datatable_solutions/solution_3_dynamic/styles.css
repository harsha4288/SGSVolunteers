/**
 * Dynamic CSS Variables Integration DataTable Styles
 * 
 * Key Innovation: CSS custom properties that adapt to content measurements
 * while maintaining existing component architecture. Dynamically calculates
 * optimal column widths to prevent the 40% width issue.
 */

/* CSS Custom Properties with fallback values */
.dynamic-table-container {
  --first-column-width: 200px;
  --other-column-width: 120px;
  --other-columns-min-width: 80px;
  --total-columns: 1;
  --available-width: 800px;
}

/* Base dynamic table styling */
.dynamic-table {
  width: 100%;
  table-layout: fixed;
  border-collapse: separate;
  border-spacing: 0;
}

/* Dynamic column sizing using CSS variables */
.dynamic-table .dynamic-first-column {
  width: var(--first-column-width);
  min-width: 150px;
  max-width: 300px;
}

.dynamic-table .dynamic-other-column {
  width: var(--other-column-width);
  min-width: var(--other-columns-min-width);
}

/* Responsive adjustments for mobile */
@media (max-width: 768px) {
  .dynamic-table-container {
    --first-column-width: min(180px, 35vw);
    --other-columns-min-width: 60px;
  }
  
  .dynamic-table .dynamic-first-column {
    min-width: 120px;
    max-width: 200px;
  }
  
  .dynamic-table .dynamic-other-column {
    min-width: 60px;
  }
  
  .dynamic-table th,
  .dynamic-table td {
    padding: 0.25rem 0.5rem;
    font-size: 0.75rem;
  }
}

/* Tablet optimization */
@media (min-width: 769px) and (max-width: 1024px) {
  .dynamic-table-container {
    --first-column-width: min(220px, 32vw);
    --other-columns-min-width: 70px;
  }
  
  .dynamic-table .dynamic-first-column {
    min-width: 140px;
    max-width: 250px;
  }
  
  .dynamic-table .dynamic-other-column {
    min-width: 70px;
  }
}

/* Desktop optimization */
@media (min-width: 1025px) {
  .dynamic-table-container {
    --first-column-width: min(280px, 28vw);
    --other-columns-min-width: 90px;
  }
  
  .dynamic-table .dynamic-first-column {
    min-width: 180px;
    max-width: 320px;
  }
  
  .dynamic-table .dynamic-other-column {
    min-width: 90px;
  }
}

/* Content-based sizing calculations */
.dynamic-table-container[data-measurement-active="true"] {
  /* Enhanced precision when content measurement is active */
}

.dynamic-table-container[data-measurement-active="true"] .dynamic-first-column {
  /* Precise width based on actual content measurements */
  width: var(--first-column-width);
  transition: width 0.2s ease;
}

.dynamic-table-container[data-measurement-active="true"] .dynamic-other-column {
  /* Calculated width ensuring optimal distribution */
  width: var(--other-column-width);
  transition: width 0.2s ease;
}

/* Overflow handling for dynamic columns */
.dynamic-table .dynamic-first-column {
  overflow: hidden;
}

.dynamic-table .dynamic-first-column .truncate {
  text-overflow: ellipsis;
  white-space: nowrap;
  overflow: hidden;
}

.dynamic-table .dynamic-other-column {
  overflow: hidden;
}

.dynamic-table .dynamic-other-column .truncate {
  text-overflow: ellipsis;
  white-space: nowrap;
  overflow: hidden;
}

/* Sticky header support for dynamic layout */
.dynamic-table thead th {
  position: sticky;
  top: 0;
  z-index: 50;
  background-color: hsl(var(--muted) / 0.9);
  backdrop-filter: blur(8px);
}

/* Dynamic hover effects */
.dynamic-table tbody tr:hover td {
  background-color: hsl(var(--muted) / 0.3);
}

/* Row striping for dynamic tables */
.dynamic-table tbody tr:nth-child(even) td {
  background-color: hsl(var(--muted) / 0.1);
}

/* Frozen column effects for dynamic layout (first column sticky) */
.dynamic-table.with-frozen-first .dynamic-first-column {
  position: sticky;
  left: 0;
  z-index: 40;
  background-color: hsl(var(--background));
  box-shadow: 2px 0 5px -2px rgba(0, 0, 0, 0.1);
}

/* Ensure proper stacking for frozen headers in dynamic layout */
.dynamic-table.with-frozen-first thead .dynamic-first-column {
  z-index: 51;
  background-color: hsl(var(--muted) / 0.9);
}

/* Border handling for dynamic layout */
.dynamic-table th:not(:last-child),
.dynamic-table td:not(:last-child) {
  border-right: 1px solid hsl(var(--accent) / 0.2);
}

.dynamic-table thead tr,
.dynamic-table tbody tr:not(:last-child) {
  border-bottom: 1px solid hsl(var(--accent) / 0.2);
}

/* Custom scrollbar integration for dynamic tables */
.dynamic-table-container .custom-scrollbar {
  scrollbar-width: thin;
  scrollbar-color: hsl(var(--border)) transparent;
}

.dynamic-table-container .custom-scrollbar::-webkit-scrollbar {
  width: 12px;
  height: 12px;
}

.dynamic-table-container .custom-scrollbar::-webkit-scrollbar-track {
  background: transparent;
}

.dynamic-table-container .custom-scrollbar::-webkit-scrollbar-thumb {
  background-color: hsl(var(--border));
  border-radius: 6px;
  border: 2px solid transparent;
  background-clip: content-box;
}

.dynamic-table-container .custom-scrollbar::-webkit-scrollbar-thumb:hover {
  background-color: hsl(var(--border) / 0.8);
}

/* Loading states for dynamic tables */
.dynamic-table.loading {
  opacity: 0.6;
  pointer-events: none;
}

.dynamic-table.measuring {
  /* Subtle indication that measurement is in progress */
  position: relative;
}

.dynamic-table.measuring::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  height: 2px;
  background: linear-gradient(90deg, 
    transparent 0%, 
    hsl(var(--primary)) 50%, 
    transparent 100%
  );
  animation: measuring-indicator 1s ease-in-out infinite;
  z-index: 60;
}

@keyframes measuring-indicator {
  0% { transform: translateX(-100%); }
  100% { transform: translateX(100%); }
}

/* Animation for dynamic layout changes */
.dynamic-table .dynamic-first-column,
.dynamic-table .dynamic-other-column {
  transition: width 0.2s ease;
}

/* High-performance mode - disable transitions when rapidly changing */
.dynamic-table-container[data-high-performance="true"] .dynamic-first-column,
.dynamic-table-container[data-high-performance="true"] .dynamic-other-column {
  transition: none;
}

/* Print styles - use fixed layout for print */
@media print {
  .dynamic-table {
    table-layout: auto !important;
  }
  
  .dynamic-table .dynamic-first-column,
  .dynamic-table .dynamic-other-column {
    width: auto !important;
    min-width: auto !important;
    max-width: none !important;
  }
}

/* Dark mode optimizations */
@media (prefers-color-scheme: dark) {
  .dynamic-table.with-frozen-first .dynamic-first-column {
    background-color: hsl(var(--background));
    box-shadow: 2px 0 5px -2px rgba(255, 255, 255, 0.1);
  }
}

/* High contrast mode support */
@media (prefers-contrast: high) {
  .dynamic-table th,
  .dynamic-table td {
    border-color: currentColor;
  }
  
  .dynamic-table tbody tr:hover td {
    background-color: hsl(var(--accent));
    color: hsl(var(--accent-foreground));
  }
}

/* Reduced motion support */
@media (prefers-reduced-motion: reduce) {
  .dynamic-table .dynamic-first-column,
  .dynamic-table .dynamic-other-column {
    transition: none;
  }
  
  .dynamic-table.measuring::before {
    animation: none;
    display: none;
  }
}

/* Focus styles for accessibility */
.dynamic-table th:focus-within,
.dynamic-table td:focus-within {
  outline: 2px solid hsl(var(--ring));
  outline-offset: -2px;
}

/* Specific optimizations for different column counts */

/* Tables with many columns (like assignments - 20+) */
.dynamic-table-container.many-columns {
  --other-columns-min-width: 60px;
}

.dynamic-table-container.many-columns .dynamic-other-column {
  min-width: 60px;
}

/* Tables with few columns (like requirements - 3) */
.dynamic-table-container.few-columns {
  --other-columns-min-width: 120px;
}

.dynamic-table-container.few-columns .dynamic-other-column {
  min-width: 120px;
}

/* Tables with size columns (like t-shirts - 7) */
.dynamic-table-container.size-columns {
  --other-columns-min-width: 60px;
}

.dynamic-table-container.size-columns .dynamic-other-column {
  min-width: 60px;
}

/* Special handling for "Max" column in t-shirts table */
.dynamic-table-container.size-columns .dynamic-other-column:nth-child(2) {
  width: 60px;
  min-width: 50px;
  max-width: 80px;
}

/* Debug mode - show measurement data */
.dynamic-table-container[data-debug="true"]::after {
  content: 'First: ' var(--first-column-width) ' | Others: ' var(--other-column-width) ' | Available: ' var(--available-width);
  position: fixed;
  bottom: 10px;
  right: 10px;
  background: hsl(var(--popover));
  color: hsl(var(--popover-foreground));
  padding: 0.5rem;
  border-radius: 0.375rem;
  font-size: 0.75rem;
  font-family: monospace;
  z-index: 9999;
  box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
}

/* Error states */
.dynamic-table-container[data-measurement-error="true"] {
  /* Fallback to safe defaults when measurement fails */
  --first-column-width: 200px;
  --other-column-width: 120px;
}

.dynamic-table-container[data-measurement-error="true"]::before {
  content: 'Measurement Error - Using Fallback Widths';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  background: hsl(var(--destructive));
  color: hsl(var(--destructive-foreground));
  padding: 0.25rem;
  text-align: center;
  font-size: 0.75rem;
  z-index: 60;
}